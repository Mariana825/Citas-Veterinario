@model PuppyCit.Models.Cliente

@{
    ViewData["Title"] = "Create";
   
}

<link rel="stylesheet" href="~/css/createcliente.css" />

<div id="FormContainer">
    <div class="ImgContainer">
        <img src="~/img/createcliente.jpg" alt="" />
    </div>

    <form id="Form" asp-action="Create" onsubmit="return validarFormulario()">
        <h1 id="FormHeading">Crear Cliente</h1>

        <div class="Name">
            <li>
             <label>Nombre:</label>
                <p class="form-control">@ViewBag.Nombre</p>
            </li>
            <!-- muestras los datos de cliente que se han pasado desde usuario-->
            <li>
                <label>Apellidos:</label>
                <p class="form-control">@ViewBag.Apellidos</p>
            </li>

            <li>
                <label>Teléfono:</label>
                <p class="form-control">@ViewBag.Telefono</p>
            </li>
            </div>


            <div class="form-group">
            <li>
                <label asp-for="Estado" class="control-label"></label>
                <input asp-for="Estado" id="estado" class="form-control" />
                <span id="errorEstado" class="text-danger"></span>

            </li>

            <li>
                <label asp-for="Codigop" class="control-label"></label>
                <input asp-for="Codigop" id="codigop" class="form-control" maxlength="5" />
                <span id="errorCodigop" class="text-danger"></span>

            </li>

            <li>
                <label asp-for="Municipio" class="control-label"></label>
                <input asp-for="Municipio" id="municipio" class="form-control" />
                <span id="errorMunicipio" class="text-danger"></span>
            </li>

            <li>
                <label asp-for="Colonia" class="control-label"></label>
                <input asp-for="Colonia" id="colonia" class="form-control" />
                <span id="errorColonia" class="text-danger"></span>
            </li>

            <li>
                <label asp-for="Calle" class="control-label"></label>
                <input asp-for="Calle" id="calle" class="form-control" />
                <span id="errorCalle" class="text-danger"></span>
            
                </li>
                
                @Html.HiddenFor(m => m.IdUsuario)




                <button type="submit">Registrar</button>
        
  

    <a href="@Url.Action("Create", "Usuario")">
                    <button type="button" name="button2" class="btn btn-secondary">Regresar</button>
    </a>


    <a href="@Url.Action("Index", "Home")">
                    <button type="button" name="button3" class="btn btn-warning">Salir</button>
    </a>
    </div>

    </form>

        </div>



<script>
    function validarFormulario() {  // función para validar los campos del formulario
        let valido = true;
        // se obtienen los valores de los campos
        const estado = document.getElementById("estado").value.trim();
        const codigop = document.getElementById("codigop").value.trim();
        const municipio = document.getElementById("municipio").value.trim();
        const colonia = document.getElementById("colonia").value.trim();
        const calle = document.getElementById("calle").value.trim();

        // se valida el campo estado: no vacío y solo letras
        if (!estado || !/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\s]+$/.test(estado)) {
            document.getElementById("errorEstado").innerText = "El estado no puede estar vacío y debe contener solo letras.";
            valido = false;  // marca como inválido si no cumple
        } else {
            document.getElementById("errorEstado").innerText = "";  // limpia el mensaje de error
        }

        // se valida el código postal: no vacío y debe ser un número de 5 dígitos

        if (!codigop || !/^\d{5}$/.test(codigop)) {
            document.getElementById("errorCodigop").innerText = "El código postal debe ser un número de 5 dígitos.";
            valido = false;  // marca como inválido si no cumple
        } else {
            document.getElementById("errorCodigop").innerText = "";  // limpia el mensaje de error
        }

        // valida que municipio no esté vacío y solo tenga letras
        if (!municipio || !/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\s]+$/.test(municipio)) {
            document.getElementById("errorMunicipio").innerText = "El municipio no puede estar vacío y debe contener solo letras.";
            valido = false; // marca como inválido si no cumple
        } else {
            document.getElementById("errorMunicipio").innerText = ""; // limpia el mensaje de error
        }

        // valida que colonia no esté vacía y solo tenga letras
        if (!colonia || !/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\s]+$/.test(colonia)) {
            document.getElementById("errorColonia").innerText = "La colonia no puede estar vacía y debe contener solo letras.";
            valido = false; // marca como inválido si no cumple
        } else {
            document.getElementById("errorColonia").innerText = ""; // limpia el mensaje de error
        }

        // valida que calle no esté vacía
        if (!calle) {
            document.getElementById("errorCalle").innerText = "La calle no puede estar vacía.";
            valido = false; // marca como inválido si no cumple
        } else {
            document.getElementById("errorCalle").innerText = ""; // limpia el mensaje de error
        }

        return valido;
    }

    // restringe caracteres inválidos en el campo estado
    document.getElementById("estado").addEventListener("input", function (e) {
        this.value = this.value.replace(/[^a-zA-ZáéíóúÁÉÍÓÚñÑ\s]/g, "");
    });
    // restringe caracteres inválidos en el campo municipio
    document.getElementById("municipio").addEventListener("input", function (e) {
        this.value = this.value.replace(/[^a-zA-ZáéíóúÁÉÍÓÚñÑ\s]/g, "");
    });
    // restringe caracteres inválidos en el campo colonia
    document.getElementById("colonia").addEventListener("input", function (e) {
        this.value = this.value.replace(/[^a-zA-ZáéíóúÁÉÍÓÚñÑ\s]/g, "");
    });
</script>
