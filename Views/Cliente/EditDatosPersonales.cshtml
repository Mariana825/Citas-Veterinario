@model PuppyCit.Models.Cliente

@{
    ViewData["Title"] = "Edit";
    
}
<link rel="stylesheet" href="~/css/editardatospersonales.css" />

<div id="FormContainer">
    <div class="ImgContainer">
        <img src="~/img/editarpersonales.jpg" alt="" />
    </div>


    <form asp-action="EditDatosPersonales" id="Form" method="post" onsubmit="return validarFormulario()">
        <h1 id="FormHeading">Editar Datos Personales</h1>

        <div class="Name">
            <li>

            <label asp-for="Usuario.Nombre" class="control-label"></label>
            <input asp-for="Usuario.Nombre" class="form-control" />
                <span id="errorNombre" class="text-danger"></span>
            </li>
            <!-- Muestras sus datos que ya tiene registrados-->
            <li>
            <label asp-for="Usuario.Apellidos" class="control-label"></label>
            <input asp-for="Usuario.Apellidos" class="form-control" />
                <span id="errorApellidos" class="text-danger"></span>
        </li>

            <li>
            <label asp-for="Usuario.Telefono" class="control-label"></label>
            <input asp-for="Usuario.Telefono" class="form-control" />
                <span id="errorTelefono" class="text-danger"></span>
        </li>
        </div>

        @Html.HiddenFor(m => m.IdUsuario)


        <button type="submit">Guardar </button>
   

    <a href="@Url.Action("Info", "Cliente")">
        <button type="button" name="button2" >Regresar</button>
    </a>

    </form>
</div>


<script>
    function validarFormulario() {   // valida los campos del formulario
        let valido = true;
        // obtiene los valores de los campos
        const nombre = document.getElementById("nombre").value.trim();
        const apellidos = document.getElementById("apellidos").value.trim();
        const telefono = document.getElementById("telefono").value.trim();
       
        // valida que el nombre no esté vacío y solo tenga letras
        if (!nombre || !/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\s]+$/.test(nombre)) {
            document.getElementById("errorNombre").innerText = "El nombre no puede estar vacío y debe contener solo letras.";
            valido = false; // marca como inválido si no cumple
        } else {
            document.getElementById("errorNombre").innerText = "";
        }

        // valida que los apellidos no estén vacíos y solo tengan letras
        if (!apellidos || !/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\s]+$/.test(apellidos)) {
            document.getElementById("errorApellidos").innerText = "Los apellidos no pueden estar vacíos y deben contener solo letras.";
            valido = false; // marca como inválido si no cumple
        } else {
            document.getElementById("errorApellidos").innerText = "";
        }

        // valida que el teléfono tenga exactamente 10 dígitos numéricos
        if (!telefono || !/^\d{10}$/.test(telefono)) {
            document.getElementById("errorTelefono").innerText = "El teléfono debe contener exactamente 10 dígitos y solo números.";
            valido = false; // marca como inválido si no cumple
        } else {
            document.getElementById("errorTelefono").innerText = "";
        }


        return valido;// regresa si todo es válido
    }

    // restringe caracteres inválidos en el campo nombre
    document.getElementById("nombre").addEventListener("input", function () {
        this.value = this.value.replace(/[^a-zA-ZáéíóúÁÉÍÓÚñÑ\s]/g, ""); // elimina caracteres que no sean letras o espacios
    });


    // restringe caracteres inválidos en el campo apellidos
    document.getElementById("apellidos").addEventListener("input", function () {
        this.value = this.value.replace(/[^a-zA-ZáéíóúÁÉÍÓÚñÑ\s]/g, "");
    });

    // restringe caracteres inválidos en el campo teléfono
    document.getElementById("telefono").addEventListener("input", function () {
        this.value = this.value.replace(/[^0-9]/g, "");
    });
</script>
